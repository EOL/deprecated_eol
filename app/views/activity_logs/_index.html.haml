- unless defined?(editable)
  - editable = true
- truncate_comments ||= false
- hide_pagination ||= false
- actual_date ||= false
- display_curator ||= false
- if log.blank?
  .empty
    -if @filter.blank?
      %p= I18n.t(:activity_log_empty)
      - unless @latest_published_revision.nil?
        %p= link_to I18n.t(:activity_log_empty_learn_more_link), cms_page_path('contribute')
    -else
      %p= I18n.t(:no_record_found_matching_your_criteria)
- else
  %ul.feed
    - log.map {|l| l['instance'] }.compact.each do |item|
      %li{:id => "#{item.class.name}-#{item.id}"}
        - case item.class.name
        - when "CuratorActivityLog"
          = render :partial => 'activity_logs/curator_activity_log', :locals => {:item => item, :actual_date => actual_date, :display_curator => display_curator}
        - when "Comment"
          .editable
            = render :partial => 'activity_logs/comment', :locals => {:item => item, :truncate_comments => truncate_comments, :editable => editable, :actual_date => actual_date, :display_curator => display_curator}
        - when "UsersDataObject"
          = render :partial => 'activity_logs/users_data_object_log', :locals => {:item => item, :actual_date => actual_date, :display_curator => display_curator}
        - when "CollectionActivityLog"
          = render :partial => 'activity_logs/collection_activity_log', :locals => {:item => item, :actual_date => actual_date, :display_curator => display_curator}
        - when "CommunityActivityLog"
          = render :partial => 'activity_logs/community_activity_log', :locals => {:item => item, :actual_date => actual_date, :display_curator => display_curator}
        - else
          - raise "Unknown activity log type: #{item.class.name}"
  - unless hide_pagination
    = will_paginate log, :previous_label => I18n.t(:pagination_previous), :next_label => I18n.t(:pagination_next),
      :inner_window => 2, :outer_window => 2
