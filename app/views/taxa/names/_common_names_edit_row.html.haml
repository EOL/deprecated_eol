- name ||= nil #scope
-# This is STUPID.  But I don't have the time to make it all right... so this is using the same logic (basically) as
-# the _common_names_edit view to pull out the single name we actually want.! - TODO (fix)
- if defined?(common_names) && defined?(language) && defined?(name_id)
  - common_names_by_language(common_names, current_language.id).each do |language_names_pair|
    - next unless language_names_pair[0] == language
    - name = language_names_pair[1].select {|n| n.name.id == name_id }.first
%td{:class => 'preferred_name_selector'}
  = radio_button_tag 'preferred_name_id', name.name.id, name.preferred ? TRUE : FALSE
%td
  = (defined?(language) && language == 'English') ? raw(name.name_string.capitalize_all_words) : raw(name.name_string)
%td
  = raw(common_name_display_attribution(name))
%td{:class => 'vet_common_name'}
  - if synonym_id = name.synonym_id_for_user(current_user)
    = link_to( I18n.t(:delete), delete_taxon_names_path(@taxon_page, :synonym_id => synonym_id),
      :data => { :confirm => I18n.t(:are_you_sure) })
  - else
    - name.vetted = Vetted.untrusted if name.vetted == Vetted.inappropriate
    = select_tag("#{name.unique_id}", options_for_select(@common_name_vet_options, name.vetted.id.to_s),
      {:data_url => vet_common_name_taxon_name_path(:taxon_id => @taxon_concept.id, :id => name.name.id, :language_id => name.language.id, :unique_id => name.unique_id, :vetted_id => 'REPLACE_ME')})
