- editable = @collection.editable_by?(current_user)
= content_for :additional_page_actions do
  -# This is put in a comment here for convenience... so developers and those "in the know" can check the value.
  /
    = "relevance #{@collection.relevance}"
  - if editable
    - unless @collection.special?
      %li= link_to I18n.t(:add_to_a_community), choose_communities_path(:collection_id => @collection), :class => 'button'
    %li= link_to I18n.t(:edit_collection_details), edit_collection_path(@collection), :class => 'button'
- if @collection_items.blank? && @filter != 'editors'
  #sidebar
    .collection_contributors
      = render :partial => 'collections/managed_by', :locals => { :collection => @collection }
    - if @collection.featuring_communities.count > 0
      .collection_contributors
        = render :partial => 'collections/endorsed_by', :locals => { :collection => @collection }
    = render :partial => 'collections/recently_visited'
  #collections.main_container
    .empty
      %p= I18n.t(:collection_is_empty)
      - if editable && ! @collection.special?
        = button_to I18n.t(:collection_delete_link), { :action => "delete", :collection_id => @collection.id }, :confirm => I18n.t(:collection_delete_link), :method => :delete
- else
  - form_options = { :html => {:method => :put} }
  - form_for @collection, form_options, :builder => ApplicationHelper::EolFormBuilder do |f|
    = hidden_field_tag(:filter, @filter) if @filter
    #tabs_sidebar
      = render :partial => 'collections/filter_by_item_type'
    #sidebar
      - if logged_in? && @filter != 'editors'
        .filters
          %h4= I18n.t(:actions)
          %fieldset.actions
            = select_tag :scope, options_for_select(@collection_item_scopes)
            - if editable && !@collection.is_resource_collection?
              -# NOTE - we use name because we don't want to handle the I18n of the button.
              = submit_tag I18n.t(:move),   :name => 'commit_move'
              = submit_tag I18n.t(:copy),   :name => 'commit_copy'
              = submit_tag I18n.t(:remove), :name => 'commit_remove'
            - else
              = submit_tag I18n.t(:copy), :name => 'commit_copy'
      - if @collection.featuring_communities.count > 0
        .collection_contributors
          = render :partial => 'collections/endorsed_by', :locals => { :collection => @collection }
      = render :partial => 'collections/recently_visited'
    #collections.main_container
      - if @filter == 'newsfeed'
        .article.list.updates
          -# TODO - can't have a nested form, here:
          -# = render :partial => 'comments/new', :locals => {:parent => @collection}
          .heading
            %h3= I18n.t(:newsfeed)
          = render :partial => 'activity_logs/index', :locals => {:log => @collection.activity_log}
      - elsif @filter == 'editors'
        = render :partial => 'collections/editors_full', :locals => { :collection => @collection }
      - else
        .heading
          %fieldset
            = label_tag :sort_by, I18n.t(:sort_collection_by_label)
            = select_tag :sort_by, options_for_select(@sort_options.map {|so| [so.name, so.id]}, @sort_by.id)
          %fieldset.actions
            = submit_tag I18n.t(:sort_by_button), :name => 'commit_sort'
          %fieldset
            = label_tag :view_as, I18n.t(:view_as_label)
            = select_tag :view_as, options_from_collection_for_select(@view_as_options, :id, :name, @view_as.id)
          %fieldset.actions
            = submit_tag I18n.t(:view_as_button), :name => 'commit_view_as'
        = will_paginate @collection_results, :previous_label => I18n.t(:pagination_previous), :next_label => I18n.t(:pagination_next), :inner_window => 2, :outer_window => 2
        - case @view_as
        - when ViewStyle.image_gallery
          = render :partial => 'collections/show_image_gallery_style'
        - when ViewStyle.names_only
          = render :partial => 'collections/show_names_only_style'
        - else
          = render :partial => 'collections/show_annotated_style', :locals => { :editable => editable, :parent_form => f }
        = will_paginate @collection_results, :previous_label => I18n.t(:pagination_previous), :next_label => I18n.t(:pagination_next), :inner_window => 2, :outer_window => 2
