- if @results.blank?
  - if @results
    - if @attribute
      .empty
        %p= data_search_results_summary
  - else
    .empty
      %p= I18n.t(:data_server_unavailable)
- else
  - if @attribute_known_uri
    .definition
      %ul.glossary
        = render('known_uris/definition', { known_uri: @attribute_known_uri, attribution: true, glossary_link: true })
    - unless @counts_of_values_from_search.blank?
      .search_summary
        %h3= I18n.t(:search_summary)
        %ul.values
          - @counts_of_values_from_search.each do |value_known_uri, count|
            %li
              -# Some catches for when it's an RDF::URI
              - name = value_known_uri.try(:label) || value_known_uri.to_s
              - uri = value_known_uri.try(:uri) || value_known_uri.to_s
              = link_to name, params.merge(q: value_known_uri.uri)
              %span.count= count
  .header
    - start_number = (@results.current_page - 1) * @results.per_page + 1
    - end_number = [ (start_number + @results.per_page - 1), @results.total_entries ].min
    - previous_label = (@results.current_page == 1) ? '' : I18n.t(:pagination_previous_with_count, count: @results.per_page)
    - next_label = (@results.current_page == @results.total_pages) ? '' : I18n.t(:pagination_next_with_count, count: @results.per_page)
    %h3= raw(I18n.t(:displaying_numerical_range_eol_records_with_count, start_number: start_number, end_number: end_number, count: @results.total_entries))
    = will_paginate @results, previous_label: previous_label, next_label: next_label, inner_window: 2
  #taxon_data
    %table.standard.data.search
      - @results.each_with_index do |data_point_uri, index|
        - if data_point_uri.hidden?
          -# This is a "placeholder" for a hidden row.
          %tr{id: data_point_uri.anchor, class: "data hidden"}
            %td.placeholder{colspan: 5}
              = I18n.t(:data_search_row_hidden)
        - else
          = render 'data_point_uris/display_rows', { data_point_uri: data_point_uri, for_search: true,
            header_id: "result_#{index}" }
